[project]
name = "pgbase"
version = "0.0.3"
description = "A library to help managing multiple database connections using SQLAlchemy with PostgreSQL"
authors = [{ name = "Bruno Peixoto", email = "brunolnetto@gmail.com" }]
maintainers = [{ name = "Bruno Peixoto", email = "brunolnetto@gmail.com" }]
license = { text = "MIT License" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"]
readme = "README.md"
requires-python = ">=3.9"
dependencies=[
    "psycopg >= 3.2.3",
    "psycopg2-binary >= 2.9.9",
    "anyio >= 4.6.2.post1",
    "asyncpg >= 0.30.0",
    "ping3 >= 4.0.8",
    "psutil >= 6.1.0",
    "pydantic >= 2.9.2",
    'sqlalchemy[asyncio] >= 2.0.35; python_version < "3.2"',
    "factory-boy >= 3.3.1",
]

[project.optional-dependencies]
tests=[
    "factory_boy >= 3.3.1",
    "pytest >= 8.3.3", 
    "pytest-asyncio >= 0.24.0", 
    "pytest-watch >= 4.2.0", 
    "pytest-mock >= 3.14.0", 
    "pytest-cov >= 6.0.0"]
lint=[
    "ruff>=0.7.4"]

[project.urls]
Homepage = "https://github.com/brunolnetto/pgbase"
Issues = "https://github.com/brunolnetto/pgbase/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["pgbase/"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
# dynamic_context = "test_function"
relative_files = true
data_file = ".coverage"
source = ["pgbase"]
omit = ["*test*.py", "tmp/*", "pytest_cov"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING"]

[tool.coverage.html]
directory = "tmp/htmlcov"
show_contexts = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disable_error_code = "annotation-unchecked"
mypy_path = "$MYPY_CONFIG_FILE_DIR/tests/django_project"

[[tool.mypy.overrides]]
module = ['django.*', 'pytest.*', 'pydot.*', 'sphinx_gallery.*']
ignore_missing_imports = true

[tool.ruff]
src = ["pgbase"]
line-length = 100
target-version = "py311"
# Exclude a variety of commonly ignored directories.
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "auto_examples",
    "venv"]
